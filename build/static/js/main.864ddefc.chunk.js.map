{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","app.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","event","fieldName","fieldValue","newField","createPokemon","updatePokemon","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","PokemonDetail","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.864ddefc.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n  return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n}\n\nexport default formatDate;\n","const formatType = (type: string): string => {\n  let color: string;\n\n  switch (type) {\n    case 'Feu':\n      color = 'red lighten-1';\n      break;\n    case 'Eau':\n      color = 'blue lighten-1';\n      break;\n    case 'Plante':\n      color = 'green lighten-1';\n      break;\n    case 'Insecte':\n      color = 'brown lighten-1';\n      break;\n    case 'Normal':\n      color = 'grey lighten-3';\n      break;\n    case 'Vol':\n      color = 'blue lighten-3';\n      break;\n    case 'Poison':\n      color = 'deep-purple accent-1';\n      break;\n    case 'Fée':\n      color = 'pink lighten-4';\n      break;\n    case 'Psy':\n      color = 'deep-purple darken-2';\n      break;\n    case 'Electrik':\n      color = 'lime accent-1';\n      break;\n    case 'Combat':\n      color = 'deep-orange';\n      break;\n    default:\n      color = 'grey';\n      break;\n  }\n\n  return `chip ${color}`;\n}\n\nexport default formatType;\n","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n  pokemon: Pokemon\n  borderColor?: string\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n\n  const [color, setColor] = useState<string>();\n  const history = useHistory();\n\n  const showBorder = () => {\n    setColor(borderColor);\n  }\n\n  const hideBorder = () => {\n    setColor('#f5f5f5');\n  }\n\n  const goToPokemon = (id: number) => {\n    history.push(`/pokemons/${id}`);\n  }\n\n\n  return (\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{ borderColor : color }}>\n        <div className=\"card-image\">\n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n            {pokemon.types.map(type => (\n              <span key={type} className={formatType(type)}>{type} </span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonCard;\n","import Pokemon from './pokemon';\n\nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n\nexport default POKEMONS;\n","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static createPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n\nconst PokemonSearch: FunctionComponent = () => {\n\n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n\n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n\n  return (\n    <div className=\"row\">\n    <div className=\"col s12 m6 offset-m3\">\n      <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"input-field\">\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} />\n        </div>\n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div>\n      </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default PokemonSearch;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  useEffect(() => {\n    PokemonService.getPokemons()\n    .then(pokemons => setPokemons(pokemons));\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <PokemonSearch />\n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon}/>\n        ))}\n        </div>\n        <Link className=\"btn-floating btn-large waves-effet waves-light red z-depth-3\"\n        style={{position: 'fixed', bottom: '25px', right: '25px'}}\n        to=\"/pokemons/add\"\n        >\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonList;\n","import React, { FunctionComponent } from 'react';\n\nconst Loader: FunctionComponent = () => {\n\n  return (\n    <div className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div><div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n\ntype Params = { id: string };\n\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id)\n    .then(pokemon => {\n      setPokemon(pokemon);\n    })\n  }, [match.params.id]);\n\n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\">\n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr>\n                        <td>Nom</td>\n                        <td><strong>{ pokemon.name }</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Points de vie</td>\n                        <td><strong>{ pokemon.hp }</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Dégâts</td>\n                        <td><strong>{ pokemon.cp }</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Types</td>\n                        <td>\n                          {pokemon.types.map(type => (\n                            <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td>\n                      </tr>\n                      <tr>\n                        <td>Date de création</td>\n                        <td>{formatDate(pokemon.created)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonsDetail;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound: FunctionComponent = () => {\n\n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1>\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n\ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n}\n\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true }\n  });\n\n  const history = useHistory();\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  }\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = event.target.name;\n    const fieldValue: string = event.target.value;\n    const newField: Field = {[fieldName]: { value: fieldValue }};\n\n    setForm({...form, ...newField});\n  }\n\n  const selectType = (type: string, event: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked: boolean = event.target.checked;\n    let newField: Field;\n\n    if (checked) {\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const isFormValid = validateForm();\n\n    if(isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n\n      isEditForm ? updatePokemon() : createPokemon();\n    }\n  }\n\n  const createPokemon = () => {\n    PokemonService.createPokemon(pokemon).then(() => history.push('/pokemons'));\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push('/pokemons'));\n  }\n\n  const isAddForm = () => {\n    return !isEditForm;\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator URL\n    if(isAddForm()) {\n      const start = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\n      const end = '.png';\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = 'L\\'URL doit commencer par https://assets.pokemon.com/assets/cms2/img/pokedex/detail/ et finir par .png';\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = {...newForm, ...{ picture: newField }};\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = {...newForm, ...{ picture: newField }};\n      }\n    }\n\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokemon est requis et doit contenir entre 3 et 25 caractères';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = {...newForm, ...{ name: newField }};\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = {...newForm, ...{ name: newField }};\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Le point de vie du pokemon est requis et doit être un nombre compris entre 0 et 999';\n      const newField: Field = { value: form.hp.value, error: errorMsg, isValid: false };\n      newForm = {...newForm, ...{ hp: newField }};\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = {...newForm, ...{ hp: newField }};\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Le point de vie du pokemon est requis et doit être un nombre compris entre 0 et 99';\n      const newField: Field = { value: form.cp.value, error: errorMsg, isValid: false };\n      newForm = {...newForm, ...{ cp: newField }};\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = {...newForm, ...{ cp: newField }};\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n  const isTypesValid = (type: string): boolean => {\n\n    if(form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    if(form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // const deletePokemon = () => {\n  //   PokemonService.deletePokemon(pokemon).then(() => history.push('/pokemons'));\n  // }\n\n  return (\n    <form onSubmit={event => handleSubmit(event)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            {isEditForm && (\n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect wave-light\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n\n                {/* Pokemon picture */}\n                {isAddForm() && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"picture\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={event => handleInputChange(event)}></input>\n                  {form.picture.error &&\n                  <div className=\"card-pannel red accent-1\">\n                    {form.picture.error}\n                  </div>\n                  }\n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={event => handleInputChange(event)}></input>\n                  {form.name.error &&\n                  <div className=\"card-pannel red accent-1\">\n                    {form.name.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={event => handleInputChange(event)}></input>\n                  {form.hp.error &&\n                  <div className=\"card-pannel red accent-1\">\n                    {form.hp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={event => handleInputChange(event)}></input>\n                  {form.cp.error &&\n                  <div className=\"card-pannel red accent-1\">\n                    {form.cp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={event => selectType(type, event)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PokemonForm;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\ntype Params = { id: string };\n\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id)\n    .then(pokemon =>\n      setPokemon(pokemon));\n  }, [match.params.id]);\n\n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonEdit;\n","export default class Pokemon {\n  // 1. Typage des propiétés d'un pokémon.\n  id: number;\n  hp: number;\n  cp: number;\n  name: string;\n  picture: string;\n  types: Array<string>;\n  created: Date;\n\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n  constructor(\n    id: number,\n    hp: number = 100,\n    cp: number = 10,\n    name: string = '...',\n    picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n    types: Array<string> = ['Normal'],\n    created: Date = new Date()\n  ) {\n   // 3. Initialisation des propiétés d'un pokémons.\n    this.id = id;\n    this.hp = hp;\n    this.cp = cp;\n    this.name = name;\n    this.picture = picture;\n    this.types = types;\n    this.created = created;\n  }\n  }\n","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\nconst PokemonAdd: FunctionComponent = () => {\n  const [id] = useState<number>(new Date().getTime());\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"header center\">Ajouter un pokémon</h2>\n      <PokemonForm pokemon={pokemon} isEditForm={false} />\n    </div>\n  );\n};\n\nexport default PokemonAdd;\n","export default class AuthenticationService {\n  static isAuthenticated: boolean = false;\n\n  static login(username: string, password: string): Promise<boolean> {\n    const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        AuthenticationService.isAuthenticated = isAuthenticated;\n        resolve(isAuthenticated);\n      }, 1000);\n    });\n  }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n\n        history.push('/pokemons');\n\n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\">\n                    {form.username.error}\n                  </div>}\n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\">\n                    {form.password.error}\n                  </div>}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {\n      return <Redirect to={{ pathname: '/login' }} />\n    }\n\n    return <Component {...props} />\n  }} />\n);\n\nexport default PrivateRoute;\n","import React, { FunctionComponent } from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonDetail from './pages/pokemon-detail';\nimport { BrowserRouter as Router, Switch, Route, Link  } from 'react-router-dom';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n\nconst App: FunctionComponent = () => {\n\n  return (\n    <Router>\n      <div>\n        {/* La barre de navigation à toute les pages */}\n        <nav>\n          <div className=\"nav-wrapper teal\">\n            <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\n          </div>\n        </nav>\n        {/* Le système de gestion des routes de notre application */}\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={PokemonList} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\n          <PrivateRoute exact path=\"/pokemons/add\" component={PokemonAdd} />\n          <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\n          <PrivateRoute path=\"/pokemons/:id\" component={PokemonDetail} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './app';\n\nReactDom.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}